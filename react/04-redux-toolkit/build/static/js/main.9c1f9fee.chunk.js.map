{"version":3,"sources":["components/SideBar/index.jsx","api/utils.js","constants.js","hooks/useDidMount.js","features/users/slice.js","api/usersApi/index.js","features/loading/slice.js","features/users/thunks.js","features/users/selector.js","pages/Users/constants.js","pages/Users/UsersTable/Actions/index.jsx","pages/Users/UsersTable/index.jsx","api/rolesApi/index.js","features/roles/thunks.js","features/roles/slice.js","features/roles/selector.js","components/Formik/Input/index.jsx","pages/Users/UserForm/FormContainer/Buttons/index.jsx","pages/Users/UserForm/FormContainer/index.jsx","pages/Users/UserForm/index.jsx","pages/Users/UserForm/converter.js","pages/Users/index.jsx","features/todos/slice.js","pages/TodoList/index.jsx","features/loading/selector.js","components/Loading/logo.svg","components/Loading/index.jsx","components/App/index.jsx","store/index.js","components/Root/index.jsx","index.js"],"names":["SideBar","initialId","className","to","activeClassName","MODE","useDidMount","callback","useEffect","postsSlice","createSlice","name","initialState","list","isFetched","reducers","getUsers","state","action","payload","getUser","createUser","push","editUser","map","user","id","actions","reducer","wait","ms","Promise","resolve","setTimeout","getTimestamp","Date","now","throwError","Error","omit","obj","paths","Object","keys","filter","key","includes","reduce","acc","getId","data","length","usersApi","find","u","newUser","timestamp","index","findIndex","deleteUser","splice","loadingSlice","incrementRequestCount","decrementRequestCount","dispatch","a","window","alert","message","selector","users","USERNAME","ROLE","INITIAL_STATE","Actions","url","useRouteMatch","history","useHistory","redirect","mode","onClick","UsersTable","useDispatch","useSelector","rolesApi","getRoles","createAsyncThunk","status","extraReducers","pending","fulfilled","rejected","roles","Input","label","validate","type","disabled","loading","useField","field","placeholder","component","Buttons","isSubmitting","useFormikContext","FormContainer","initialValues","onSubmit","value","join","UserForm","useParams","usersSelector","rolesSelector","Number","handleSubmit","values","console","error","getInitialValues","Users","path","exact","todosSlice","title","todoList","setTitle","addTodo","prepare","nanoid","trim","isCompleted","toggleTodo","todo","deleteTodo","TodoList","todos","handleDelete","e","stopPropagation","preventDefault","onChange","target","style","textDecoration","Loading","src","logo","alt","App","from","logger","createLogger","collapsed","configureStore","middleware","getDefaultMiddleware","concat","Root","children","store","basename","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.9c1f9fee.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport './styles.scss';\n\nfunction SideBar() {\n  return (\n    <aside className=\"SideBar\">\n      <ul>\n        <li>\n          <NavLink to=\"/users\" activeClassName=\"bold\">\n            Users\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink to=\"/todo-list\" activeClassName=\"bold\">\n            Todo List\n          </NavLink>\n        </li>\n      </ul>\n    </aside>\n  );\n}\n\nexport default SideBar;\n","export const wait = (ms = 1000) =>\n  new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n\nexport const createGetId = initialId => () => ++initialId;\n\nexport const getTimestamp = () => Date.now();\n\nexport const throwError = id => {\n  throw new Error(`Record with ID ${id} does not exist`);\n};\n\nexport const omit = (obj, [paths]) =>\n  Object.keys(obj)\n    .filter(key => !paths.includes(key))\n    .reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: obj[key],\n      }),\n      {}\n    );\n","export const MODE = {\n  VIEW: 'view',\n  CREATE: 'create',\n  EDIT: 'edit',\n};\n","import { useEffect } from 'react';\n\nconst useDidMount = callback => {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(callback, []);\n};\n\nexport default useDidMount;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  list: [],\n  isFetched: false,\n};\n\nconst postsSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    getUsers(state, action) {\n      return {\n        list: action.payload,\n        isFetched: true,\n      };\n    },\n    getUser(state, action) {\n      state.list = state.isFetched ? state.list : [action.payload];\n    },\n    createUser(state, action) {\n      state.list.push(action.payload);\n    },\n    editUser(state, action) {\n      state.list = state.list.map(user => (user.id === action.payload.id ? action.payload : user));\n    },\n  },\n});\n\nexport const { actions, reducer } = postsSlice;\n","import { wait, createGetId, getTimestamp, throwError, omit } from '../utils';\nimport data from './db';\n\nconst getId = createGetId(data.length);\n\nconst usersApi = {\n  // GET /users\n  async getUsers() {\n    await wait(2000);\n\n    return [...data];\n  },\n  // GET /users/:id\n  async getUser(id) {\n    await wait();\n\n    const user = data.find(u => u.id === id);\n\n    if (user) {\n      return user;\n    } else {\n      throwError(id);\n    }\n  },\n  // POST /users\n  async createUser(user) {\n    await wait();\n\n    const newUser = {\n      id: getId(),\n      ...omit(user, ['id', 'timestamp']),\n      timestamp: getTimestamp(),\n    };\n\n    data.push(newUser);\n\n    return newUser;\n  },\n  // PUT /users\n  async editUser(user) {\n    await wait();\n\n    const index = data.findIndex(u => u.id === user.id);\n\n    if (~index) {\n      data[index] = {\n        ...user,\n        timestamp: getTimestamp(),\n      };\n\n      return data[index];\n    } else {\n      throwError(user.id);\n    }\n  },\n  // DELETE /users\n  async deleteUser(user) {\n    await wait();\n\n    const index = data.findIndex(u => u === user.id);\n\n    if (~index) {\n      return data.splice(index, 1);\n    } else {\n      throwError(user.id);\n    }\n  },\n};\n\nexport default usersApi;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = 0;\n\nconst loadingSlice = createSlice({\n  name: 'loading',\n  initialState,\n  reducers: {\n    incrementRequestCount(state) {\n      return state + 1;\n    },\n    decrementRequestCount(state) {\n      return state - 1;\n    },\n  },\n});\n\nexport const { incrementRequestCount, decrementRequestCount } = loadingSlice.actions;\n\nexport const { reducer } = loadingSlice;\n","import usersApi from '../../api/usersApi';\nimport { incrementRequestCount, decrementRequestCount } from '../loading/slice';\nimport { actions } from './slice';\n\nexport const getUsers = () => async dispatch => {\n  try {\n    dispatch(incrementRequestCount());\n\n    const payload = await usersApi.getUsers();\n\n    dispatch(actions.getUsers(payload));\n  } catch (err) {\n    window.alert(`Failed to fetch users: ${err.message}`);\n  } finally {\n    dispatch(decrementRequestCount());\n  }\n};\n\nexport const getUser = id => async dispatch => {\n  try {\n    dispatch(incrementRequestCount());\n\n    const payload = await usersApi.getUser(id);\n\n    dispatch(actions.getUser(payload));\n  } catch (err) {\n    window.alert(`Failed to fetch user: ${err.message}`);\n  } finally {\n    dispatch(decrementRequestCount());\n  }\n};\n\nexport const createUser = user => async dispatch => {\n  try {\n    dispatch(incrementRequestCount());\n\n    const payload = await usersApi.createUser(user);\n\n    dispatch(actions.createUser(payload));\n  } catch (err) {\n    window.alert(`Failed to create user: ${err.message}`);\n  } finally {\n    dispatch(decrementRequestCount());\n  }\n};\n\nexport const editUser = user => async dispatch => {\n  try {\n    dispatch(incrementRequestCount());\n\n    const payload = await usersApi.editUser(user);\n\n    dispatch(actions.editUser(payload));\n  } catch (err) {\n    window.alert(`Failed to edit user: ${err.message}`);\n  } finally {\n    dispatch(decrementRequestCount());\n  }\n};\n","const selector = state => state.users;\n\nexport default selector;\n","export const ID = 'id';\nexport const USERNAME = 'username';\nexport const ROLE = 'role';\nexport const TIMESTAMP = 'timestamp';\n\nexport const INITIAL_STATE = {\n  [USERNAME]: '',\n  [ROLE]: '',\n};\n","import { useRouteMatch, useHistory } from 'react-router-dom';\n\nimport { MODE } from '../../../../constants';\n\nfunction Actions({ id }) {\n  const { url } = useRouteMatch();\n  const history = useHistory();\n\n  const redirect = mode => () => {\n    history.push(`${url}/user/${mode}/${id}`);\n  };\n\n  return (\n    <div className=\"Actions\">\n      <button onClick={redirect(MODE.VIEW)}>View</button>{' '}\n      <button onClick={redirect(MODE.EDIT)}>Edit</button>\n    </div>\n  );\n}\n\nexport default Actions;\n","import { useRouteMatch, Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport useDidMount from '../../../hooks/useDidMount';\nimport { getUsers } from '../../../features/users';\nimport { MODE } from '../../../constants';\nimport { ID, USERNAME, ROLE, TIMESTAMP } from '../constants';\nimport Actions from './Actions';\nimport './index.scss';\n\nfunction UsersTable() {\n  const { url } = useRouteMatch();\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.users);\n\n  useDidMount(() => {\n    if (!users.isFetched) {\n      dispatch(getUsers());\n    }\n  });\n\n  return (\n    <div className=\"UsersTable\">\n      <Link to={`${url}/user/${MODE.CREATE}`}>Create User</Link>\n\n      <table>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Username</th>\n            <th>Role</th>\n            <th>Last Updated At</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.list.map(user => (\n            <tr key={user[ID]}>\n              <td>{user[ID]}</td>\n              <td>{user[USERNAME]}</td>\n              <td>{user[ROLE]}</td>\n              <td>{user[TIMESTAMP]}</td>\n              <td>\n                <Actions id={user[ID]} />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default UsersTable;\n","import { wait } from '../utils';\nimport data from './db';\n\nconst rolesApi = {\n  // GET /roles\n  async getRoles() {\n    await wait();\n\n    return data;\n  },\n};\n\nexport default rolesApi;\n","import { createAsyncThunk } from '@reduxjs/toolkit';\n\nimport rolesApi from '../../api/rolesApi';\n\nexport const getRoles = createAsyncThunk('roles/getRoles', rolesApi.getRoles);\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { getRoles } from './thunks';\n\nconst initialState = {\n  list: [],\n  status: 'idle',\n};\n\nconst rolesSlice = createSlice({\n  name: 'roles',\n  initialState,\n  extraReducers: {\n    [getRoles.pending]: state => {\n      state.status = 'loading';\n    },\n    [getRoles.fulfilled]: (state, action) => ({\n      list: action.payload,\n      status: 'succeeded',\n    }),\n    [getRoles.rejected]: state => {\n      state.status = 'failed';\n    },\n  },\n});\n\nexport const { reducer } = rolesSlice;\n","const selector = state => state.roles;\n\nexport default selector;\n","import { useField, ErrorMessage } from 'formik';\n\nimport './styles.scss';\n\nfunction Input({ name, label, validate, type = 'text', disabled = false, loading }) {\n  const [field] = useField({ name, validate });\n\n  return (\n    <div className=\"Input\">\n      <label>\n        <div>{label}</div>\n        <input\n          type={type}\n          disabled={loading ? true : disabled}\n          placeholder={loading ? 'loading...' : ''}\n          {...field}\n        />\n      </label>\n\n      <ErrorMessage name={name} className=\"error\" component=\"div\" />\n    </div>\n  );\n}\n\nexport default Input;\n","import { useHistory } from 'react-router-dom';\nimport { useFormikContext } from 'formik';\n\nimport { MODE } from '../../../../../constants';\n\nfunction Buttons({ mode }) {\n  const history = useHistory();\n  const { isSubmitting } = useFormikContext();\n\n  return (\n    <div>\n      {(mode === MODE.CREATE || mode === MODE.EDIT) && (\n        <button type=\"submit\" disabled={isSubmitting}>\n          Save\n        </button>\n      )}\n\n      <button type=\"button\" onClick={() => history.push('/users')}>\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nexport default Buttons;\n","import { Formik, Form } from 'formik';\n\nimport Input from '../../../../components/Formik/Input';\nimport { MODE } from '../../../../constants';\nimport { ROLE, USERNAME } from '../../constants';\nimport Buttons from './Buttons';\n\nfunction FormContainer({ initialValues, onSubmit, mode, roles }) {\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      <Form>\n        <Input name={USERNAME} label=\"Username\" disabled={mode === MODE.VIEW} />\n\n        <Input\n          name={ROLE}\n          label=\"Role\"\n          disabled={mode === MODE.VIEW}\n          loading={roles.status === 'loading'}\n          validate={value => {\n            if (!roles.list.includes(value)) {\n              return `Allowed roles: ${roles.list.join(', ')}`;\n            }\n          }}\n        />\n\n        <br />\n\n        <Buttons mode={mode} />\n      </Form>\n    </Formik>\n  );\n}\n\nexport default FormContainer;\n","import { useParams, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport useDidMount from '../../../hooks/useDidMount';\nimport { getUser, createUser, editUser, selector as usersSelector } from '../../../features/users';\nimport { getRoles, selector as rolesSelector } from '../../../features/roles';\nimport { MODE } from '../../../constants';\nimport { ID } from '../constants';\nimport FormContainer from './FormContainer';\nimport { getInitialValues, getRequestPayload } from './converter';\n\nfunction UserForm() {\n  const { mode, id } = useParams();\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n  const users = useSelector(usersSelector);\n  const roles = useSelector(rolesSelector);\n\n  const user = users.list.find(user => user.id === Number(id));\n\n  useDidMount(() => {\n    if (mode === MODE.VIEW || mode === MODE.EDIT) {\n      if (!user) {\n        dispatch(getUser(Number(id)));\n      }\n    }\n\n    if (roles.status === 'idle') {\n      dispatch(getRoles());\n    }\n  });\n\n  const handleSubmit = async values => {\n    try {\n      const payload = getRequestPayload(values);\n\n      switch (mode) {\n        case MODE.CREATE:\n          await dispatch(createUser(payload));\n          break;\n        case MODE.EDIT:\n          await dispatch(editUser(payload));\n          break;\n        default:\n          console.error(`Failed to execute this request for ${mode} mode`);\n      }\n    } catch (err) {\n      window.alert(err.message);\n    }\n\n    history.push('/users');\n  };\n\n  const initialValues = getInitialValues(user);\n\n  return (\n    <FormContainer\n      key={`${mode}:${initialValues[ID]}`}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      mode={mode}\n      roles={roles}\n    />\n  );\n}\n\nexport default UserForm;\n","import { INITIAL_STATE } from '../constants';\n\nexport const getInitialValues = user => (user ? user : INITIAL_STATE);\n\nexport const getRequestPayload = values => values;\n","import { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport { MODE } from '../../constants';\nimport UsersTable from './UsersTable';\nimport UserForm from './UserForm';\n\nfunction Users() {\n  const { path } = useRouteMatch();\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path={path}>\n          <UsersTable />\n        </Route>\n\n        <Route\n          exact\n          path={`${path}/user/:mode(${MODE.VIEW}|${MODE.CREATE}|${MODE.EDIT})/:id?`}\n        >\n          <UserForm />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Users;\n","import { createSlice, nanoid } from '@reduxjs/toolkit';\n\nconst initialState = {\n  title: '',\n  todoList: [],\n};\n\nconst todosSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    setTitle(state, action) {\n      state.title = action.payload;\n    },\n    addTodo: {\n      reducer(state, action) {\n        state.title = '';\n        state.todoList.push(action.payload);\n      },\n      prepare(title) {\n        return {\n          payload: {\n            id: nanoid(),\n            title: title.trim(),\n            isCompleted: false,\n          },\n        };\n      },\n    },\n    toggleTodo(state, action) {\n      state.todoList = state.todoList.map(todo =>\n        todo.id === action.payload ? { ...todo, isCompleted: !todo.isCompleted } : todo\n      );\n    },\n    deleteTodo(state, action) {\n      state.todoList = state.todoList.filter(todo => todo.id !== action.payload);\n    },\n  },\n});\n\nexport const { setTitle, addTodo, toggleTodo, deleteTodo } = todosSlice.actions;\nexport const { reducer } = todosSlice;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { setTitle, addTodo, toggleTodo, deleteTodo } from '../../features/todos';\nimport './styles.scss';\n\nfunction TodoList() {\n  const dispatch = useDispatch();\n  const { title, todoList } = useSelector(state => state.todos);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (title.trim()) {\n      dispatch(addTodo(title));\n    }\n  };\n\n  const handleDelete = id => e => {\n    e.stopPropagation();\n\n    dispatch(deleteTodo(id));\n  };\n\n  return (\n    <div className=\"TodoList\">\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={title} onChange={e => dispatch(setTitle(e.target.value))} />\n      </form>\n\n      <ul>\n        {todoList.map(({ id, title, isCompleted }) => (\n          <li key={id} onClick={() => dispatch(toggleTodo(id))}>\n            <span style={{ textDecoration: isCompleted ? 'line-through' : 'auto' }}>{title}</span>\n\n            <button type=\"button\" onClick={handleDelete(id)}>\n              X\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n","const selector = state => state.loading;\n\nexport default selector;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selector } from '../../features/loading';\nimport logo from './logo.svg';\nimport './styles.scss';\n\nfunction Loading() {\n  const requestsCount = useSelector(selector);\n\n  if (requestsCount === 0) {\n    return null;\n  }\n\n  return (\n    <div>\n      <div className=\"Loading\">\n        <img src={logo} className=\"logo\" alt=\"logo\" />\n      </div>\n\n      <div className=\"overlay\" />\n    </div>\n  );\n}\n\nexport default Loading;\n","import { Switch, Redirect, Route } from 'react-router-dom';\n\nimport SideBar from '../SideBar';\nimport Users from '../../pages/Users';\nimport TodoList from '../../pages/TodoList';\nimport Loading from '../Loading';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SideBar />\n\n      <main>\n        <Switch>\n          <Redirect exact from=\"/\" to=\"/users\" />\n\n          <Route path=\"/users\">\n            <Users />\n          </Route>\n\n          <Route path=\"/todo-list\">\n            <TodoList />\n          </Route>\n        </Switch>\n      </main>\n\n      <Loading />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { createLogger } from 'redux-logger';\n\nimport { reducer as loading } from '../features/loading';\nimport { reducer as users } from '../features/users';\nimport { reducer as roles } from '../features/roles';\nimport { reducer as todos } from '../features/todos';\n\nconst logger = createLogger({ collapsed: true });\n\nexport default configureStore({\n  reducer: {\n    loading,\n    users,\n    roles,\n    todos,\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\n});\n","import { StrictMode } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport store from '../../store';\n\nfunction Root({ children }) {\n  return (\n    <StrictMode>\n      <Provider store={store}>\n        <Router basename=\"/globallogic-js-basecamp-2021/react/04-redux-toolkit/build\">\n          {children}\n        </Router>\n      </Provider>\n    </StrictMode>\n  );\n}\n\nexport default Root;\n","import ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport Root from './components/Root';\nimport './styles.css';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n    <Root>\n      <App />\n    </Root>,\n  rootElement\n);\n"],"sourceRoot":""}