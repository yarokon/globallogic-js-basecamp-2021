{"version":3,"sources":["api/utisl.js","constants.js","api/userApi/index.js","components/Users/constants.js","components/Users/UsersTable/Actions/index.jsx","components/Users/UsersTable/index.jsx","common/Formik/Input/index.jsx","components/Users/UserForm/FormContainer/Buttons/index.jsx","components/Users/UserForm/FormContainer/index.jsx","components/Users/UserForm/index.jsx","components/Users/UserForm/converter.js","components/Users/index.jsx","components/App/index.jsx","components/Root/index.jsx","index.js"],"names":["initialId","MODE","wait","ms","Promise","resolve","setTimeout","getTimestamp","Date","now","throwError","id","Error","getId","data","length","api","getUsers","console","log","getUser","user","find","u","createUser","newUser","timestamp","push","editUser","index","findIndex","deleteUser","splice","getRoles","ROLES","USERNAME","ROLE","INITIAL_STATE","Actions","url","useRouteMatch","history","useHistory","redirect","mode","className","onClick","UsersTable","users","setUsers","useEffect","userApi","then","to","map","Input","name","label","validate","type","disabled","useField","field","component","Buttons","isSubmitting","useFormikContext","FormContainer","initialValues","onSubmit","roles","value","includes","join","UserForm","useParams","Number","prevUsers","catch","err","window","alert","message","useState","setRoles","handleSubmit","values","a","payload","error","getInitialValues","Users","path","exact","App","from","Root","children","basename","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c699f94e.chunk.js","sourcesContent":["export const wait = (ms = 800) =>\n  new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n\nexport const createGetId = initialId => () => ++initialId;\n\nexport const getTimestamp = () => Date.now();\n\nexport const throwError = id => {\n  throw new Error(`Record with ID ${id} does not exist`);\n};\n","export const MODE = {\n  VIEW: 'view',\n  CREATE: 'create',\n  EDIT: 'edit',\n};\n","import { wait, createGetId, getTimestamp, throwError } from '../utisl';\nimport data from './db';\n\nconst getId = createGetId(data.length);\n\nconst api = {\n  // GET /users\n  async getUsers() {\n    await wait(1000);\n\n    console.log('GET /users', data);\n    return data;\n  },\n  // GET /users/:id\n  async getUser(id) {\n    await wait();\n\n    const user = data.find(u => u.id === id);\n\n    if (user) {\n      console.log(`GET /users/${user.id}`, user);\n      return user;\n    } else {\n      throwError(id);\n    }\n  },\n  // POST /users\n  async createUser(user) {\n    await wait();\n\n    const newUser = {\n      ...user,\n      id: getId(),\n      timestamp: getTimestamp(),\n    };\n\n    data.push(newUser);\n\n    console.log('POST /users', newUser);\n    return newUser;\n  },\n  // PUT /users\n  async editUser(user) {\n    await wait();\n\n    const index = data.findIndex(u => u.id === user.id);\n\n    if (~index) {\n      data[index] = {\n        ...user,\n        timestamp: getTimestamp(),\n      };\n\n      console.log('PUT /users', data[index]);\n      return data[index];\n    } else {\n      throwError(user.id);\n    }\n  },\n  // DELETE /users\n  async deleteUser(user) {\n    await wait();\n\n    const index = data.findIndex(u => u === user.id);\n\n    if (~index) {\n      console.log('DELETE /users', user);\n      return data.splice(index, 1);\n    } else {\n      throwError(user.id);\n    }\n  },\n  // GET /roles\n  async getRoles() {\n    await wait();\n    const ROLES = ['user', 'super-user', 'admin'];\n\n    console.log('GET /roles', ROLES);\n    return ROLES;\n  },\n};\n\nexport default api;\n","export const ID = 'id';\nexport const USERNAME = 'username';\nexport const ROLE = 'role';\nexport const TIMESTAMP = 'timestamp';\n\nexport const INITIAL_STATE = {\n  [USERNAME]: '',\n  [ROLE]: '',\n};\n","import { useRouteMatch, useHistory } from 'react-router-dom';\n\nimport { MODE } from '../../../../constants';\n\nfunction Actions({ id }) {\n  const { url } = useRouteMatch();\n  const history = useHistory();\n\n  const redirect = mode => () => {\n    history.push(`${url}/user/${mode}/${id}`);\n  };\n\n  return (\n    <div className=\"Actions\">\n      <button onClick={redirect(MODE.VIEW)}>View</button>{' '}\n      <button onClick={redirect(MODE.EDIT)}>Edit</button>\n    </div>\n  );\n}\n\nexport default Actions;\n","import { useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\n\nimport userApi from '../../../api/userApi';\nimport { MODE } from '../../../constants';\nimport { ID, USERNAME, ROLE, TIMESTAMP } from '../constants';\nimport Actions from './Actions';\nimport './index.scss';\n\nfunction UsersTable({ users, setUsers }) {\n  const { url } = useRouteMatch();\n\n  useEffect(() => {\n    userApi.getUsers().then(setUsers);\n  }, [setUsers]);\n\n  return (\n    <div className=\"UsersTable\">\n      <Link to={`${url}/user/${MODE.CREATE}`}>Create User</Link>\n\n      <table>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Username</th>\n            <th>Role</th>\n            <th>Last Updated At</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(user => (\n            <tr key={user[ID]}>\n              <td>{user[ID]}</td>\n              <td>{user[USERNAME]}</td>\n              <td>{user[ROLE]}</td>\n              <td>{user[TIMESTAMP]}</td>\n              <td>\n                <Actions id={user[ID]} />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default UsersTable;\n","import { useField, ErrorMessage } from 'formik';\n\nimport './styles.scss';\n\nfunction Input({ name, label, validate, type = 'text', disabled = false }) {\n  const [field] = useField({ name, validate });\n\n  return (\n    <div className=\"Input\">\n      <label>\n        <div>{label}</div>\n        <input type={type} disabled={disabled} {...field} />\n      </label>\n\n      <ErrorMessage name={name} className=\"error\" component=\"div\" />\n    </div>\n  );\n}\n\nexport default Input;\n","import { useHistory } from 'react-router-dom';\nimport { useFormikContext } from 'formik';\n\nimport { MODE } from '../../../../../constants';\n\nfunction Buttons({ mode }) {\n  const history = useHistory();\n  const { isSubmitting } = useFormikContext();\n\n  return (\n    <div>\n      {(mode === MODE.CREATE || mode === MODE.EDIT) && (\n        <button type=\"submit\" disabled={isSubmitting}>\n          Save\n        </button>\n      )}\n\n      <button type=\"button\" onClick={() => history.push('/users')}>\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nexport default Buttons;\n","import { Formik, Form } from 'formik';\n\nimport Input from '../../../../common/Formik/Input';\nimport { MODE } from '../../../../constants';\nimport { ROLE, USERNAME } from '../../constants';\nimport Buttons from './Buttons';\n\nfunction FormContainer({ initialValues, onSubmit, mode, roles }) {\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      <Form>\n        <Input name={USERNAME} label=\"Username\" disabled={mode === MODE.VIEW} />\n\n        <Input\n          name={ROLE}\n          label=\"Role\"\n          disabled={mode === MODE.VIEW}\n          validate={value => {\n            if (!roles.includes(value)) {\n              return `Allowed roles: ${roles.join(', ')}`;\n            }\n          }}\n        />\n\n        <br />\n\n        <Buttons mode={mode} />\n      </Form>\n    </Formik>\n  );\n}\n\nexport default FormContainer;\n","import { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport userApi from '../../../api/userApi';\nimport { MODE } from '../../../constants';\nimport { ID } from '../constants';\nimport FormContainer from './FormContainer';\nimport { getInitialValues, getRequestPayload } from './converter';\n\nfunction UserForm({ users, setUsers }) {\n  const { mode, id } = useParams();\n  const history = useHistory();\n\n  const user = users.find(user => user.id === Number(id));\n\n  useEffect(() => {\n    if (mode === MODE.VIEW || mode === MODE.EDIT) {\n      if (!user) {\n        userApi\n          .getUser(Number(id))\n          .then(user => setUsers(prevUsers => [...prevUsers, user]))\n          .catch(err => window.alert(err.message));\n      }\n    }\n  }, [id, mode, user, setUsers]);\n\n  const [roles, setRoles] = useState([]);\n  useEffect(() => {\n    userApi.getRoles().then(setRoles);\n  }, [setUsers]);\n\n  const handleSubmit = async values => {\n    try {\n      const payload = getRequestPayload(values);\n\n      switch (mode) {\n        case MODE.CREATE:\n          await userApi.createUser(payload);\n          break;\n        case MODE.EDIT:\n          await userApi.editUser(payload);\n          break;\n        default:\n          console.error(`Failed to execute this request for ${mode} mode`);\n      }\n    } catch (err) {\n      window.alert(err.message);\n    }\n\n    history.push('/users');\n  };\n\n  const initialValues = getInitialValues(user);\n\n  return (\n    <FormContainer\n      key={`${mode}:${initialValues[ID]}`}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      mode={mode}\n      roles={roles}\n    />\n  );\n}\n\nexport default UserForm;\n","import { INITIAL_STATE } from '../constants';\n\nexport const getInitialValues = user => (user ? user : INITIAL_STATE);\n\nexport const getRequestPayload = values => values;\n","import { useState } from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport { MODE } from '../../constants';\nimport UsersTable from './UsersTable';\nimport UserForm from './UserForm';\n\nfunction Users() {\n  const { path } = useRouteMatch();\n  const [users, setUsers] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path={path}>\n          <UsersTable users={users} setUsers={setUsers} />\n        </Route>\n\n        <Route exact path={`${path}/user/:mode(${MODE.VIEW}|${MODE.CREATE}|${MODE.EDIT})/:id?`}>\n          <UserForm users={users} setUsers={setUsers} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Users;\n","import { Switch, Redirect, Route } from 'react-router-dom';\n\nimport Users from '../Users';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/users\" />\n\n        <Route path=\"/users\">\n          <Users />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { BrowserRouter as Router } from 'react-router-dom';\n\nfunction Root({ children }) {\n  return (\n    <Router basename=\"/globallogic-js-basecamp-2021/react/03-react-router-formik/build\">\n      {children}\n    </Router>\n  );\n}\n\nexport default Root;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport Root from './components/Root';\nimport './styles.css';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <StrictMode>\n    <Root>\n      <App />\n    </Root>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}